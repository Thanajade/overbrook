{"version":3,"sources":["components/Layouts.js","App.js","serviceWorker.js","index.js"],"names":["ImageExampleFluid","react_default","a","createElement","Image","src","fluid","Layouts","Menu","Item","header","style","height","alt","name","position","href","Segment","Layouts_ImageExampleFluid","Container","textAlign","Grid","columns","Row","column","Column","Header","as","size","App","components_Layouts","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f499a70d.chunk.js","sourcesContent":["import React from 'react';\nimport { Image, Menu, Divider, Container, Table, Segment, Header, Grid } from 'semantic-ui-react'\n\nconst ImageExampleFluid = () => <Image src='/img/home.jpg' fluid />;\n\nconst obh_logo_1 = '/img/logo-3-white.png';\nconst obh_logo_2 = '/img/logo.png';\nconst aav = '/img/01-sponsors/AAV-Logo.png';\nconst nok = '/img/01-sponsors/NOK-Logo.png';\n\nconst Layouts = () => {\n    return (\n        <div>\n            <Menu>\n                <Menu.Item header>\n                        <img src='/img/logo.png' style={{height:36}} alt='logo'/>\n                </Menu.Item>\n                <Menu.Item\n                    name='Overbrook Hospital Minimatathon'\n                />\n                <Menu.Item position='right'>\n                    <a href='https://www.facebook.com/Overbrook-Hospital-Minimarathon-2055651531391761/'>ติดต่อ</a>\n                </Menu.Item>\n            </Menu>\n            <Segment>\n                {/*Cover*/}\n                <ImageExampleFluid/>\n            </Segment>\n            <Segment>\n                <Container textAlign='center'>\n                    <Grid columns='equal'>\n                        <Grid.Row column={4}>\n                            <Grid.Column>\n                                <Image src={obh_logo_1}/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src={nok}/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src={aav}/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src={obh_logo_2}/>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n            <Segment>\n                <Header as='h2'>กำหนดการณ์</Header>\n                <Image src='/img/03-agenda/agenda.jpg' fluid/>\n            </Segment>\n            <Segment>\n                <Header as='h2'>เส้นทางวิ่ง</Header>\n                <Grid columns='equal'>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h3'>มินิมาราธอน</Header>\n                            <Image src='/img/02-routes/route-mini.jpg' fluid/>\n                        </Grid.Column>\n                    </Grid.Row>\n                    <Grid.Row>\n                        <Grid.Column>\n                            <Header as='h3'>ฟันรัน</Header>\n                            <Image src='/img/02-routes/route-funrun.jpg' fluid/>\n                        </Grid.Column>\n                    </Grid.Row>\n                </Grid>\n            </Segment>\n            <Segment>\n                <Header as='h2'>ประเภทการแข่งขัน</Header>\n                <Image src='/img/04-racetype/racetype.jpg' fluid/>\n            </Segment>\n            <Segment>\n                <Header as='h2'>เสื้อประจำงาน</Header>\n                <Image src='/img/06-shirt/shirt.jpg' fluid/>\n            </Segment>\n            <Segment>\n                <Header as='h2'>เหรียญรางวัล</Header>\n                <Container textAlign='center'>\n                    <Grid columns='equal'>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Image src='/img/05-medal/medal-front.png' size='medium'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src='/img/05-medal/medal-back.png' size='medium'/>\n                            </Grid.Column>\n                        </Grid.Row>\n                        <Grid.Row>\n                            <Grid.Column>\n                                <Image src='/img/05-medal/strap-mini.png' size='medium'/>\n                            </Grid.Column>\n                            <Grid.Column>\n                                <Image src='/img/05-medal/strap-funrun.png' size='medium'/>\n                            </Grid.Column>\n                        </Grid.Row>\n                    </Grid>\n                </Container>\n            </Segment>\n            <Segment>\n                <Container textAlign='center'>\n                    <Header as='h2'>\n                        ขอขอบคุณทุกท่านที่ให้ความสนใจและสนับสนุนงานวิ่ง Overbrook Minimarathon ในครั้งนี้\n                    </Header>\n                    <Header as='h3'>\n                        ติดตามข่าวสารอัพเดทของงานได้ทาง Facebook Page <a href=\"https://www.facebook.com/Overbrook-Hospital-Minimarathon-2055651531391761/\">Overbrook Minimarathon</a>\n                    </Header>\n                    <Header as='h3'>\n                        ทั้งนี้ท่านยังสามารถแจ้งชำระเงินและสมัครวิ่งได้ ณ วันงานเสาร์ที่ 27 เมษายน 2562\n                        แล้วเจอกันในงานครับ\n                    </Header>\n                </Container>\n            </Segment>\n        </div>\n    )\n};\n\nexport default Layouts;","import React from 'react';\nimport Layouts from './components/Layouts';\n\nfunction App() {\n  return (\n    <div>\n      <Layouts/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}